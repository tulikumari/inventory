{"version":3,"sources":["Screens/header.js","Screens/home/index.js","Screens/manageTypes/index.js","actions/typesAction.js","actions/actionTypes.js","Screens/AddTypes/index.js","component/routes/routermain.js","reducers/index.js","reducers/typesReducer.js","reducers/itemsReducer.js","reducers/typesFields.js","store/configureStore.js","component/App.js","serviceWorker.js","index.js"],"names":["Header","Fragment","class","type","data-toggle","data-target","id","href","this","props","types","map","i","key","object_type","Component","connect","state","ownProps","Index","React","name","objectTypeEdit","bind","AddTypes","e","typeVal","preventDefault","typeLength","console","log","length","lastId","object_title","fields","title","createTypes","addItems","data","fieldLength","lastFieldId","push","editTypes","target","value","splice","index","deleteTypes","className","onClick","onChange","objectTitleEdit","objectFieldEdit","objectFieldTypeEdit","AddField","listView","dispatch","typesAction","typesItem","itemdata","items","item","findIndex","val","types_id","item_id","type_id","field_id","field_value","addFields","editFields","indexType","filterField","filter","n","match","params","forEach","Routermain","exact","path","component","Home","ManageTypes","url","combineReducers","action","Object","assign","elementPos","x","indexOf","dupState","flag","element","find","o","dupState2","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","configureStore","App","loading","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93c3a409.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  \n  render() {\n    return (\n      <React.Fragment>\n        <header>\n        \n           \n        <nav class=\"navbar navbar-expand-md navbar-light bg-light\">\n        <a class=\"navbar-brand\">Objector</a>\n        <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <div class=\"navbar-nav\">\n                <a href=\"/addType/all\" class=\"nav-item nav-link active\">All</a>\n                {this.props.types.map((type, i) => <a href={`/addType/${type.id}`} key={i} class=\"nav-item nav-link\">{(type.object_type===\"\")? \"No Title\":type.object_type}</a>)}\n                <a href=\"/manageTypes\" class=\"nav-item nav-link\">Manage Types</a>\n            </div>           \n        </div>\n    </nav>\n            \n        </header>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    types: state.types\n  }\n};\n\nexport default connect(mapStateToProps)(Header);\n\n","import React from 'react';\nimport Header from '../header';\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }; \n  }\n  render() {\n    return (\n        <Header />\n        \n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from '../header';\nimport { connect } from 'react-redux';\nimport * as typesAction from '../../actions/typesAction';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:[],\n    }; \n    \n    this.objectTypeEdit = this.objectTypeEdit.bind(this);\n    this.AddTypes = this.AddTypes.bind(this);\n  }\n\n  AddTypes(e,typeVal){\n    e.preventDefault();\n    let typeLength = 0;\n    console.log(typeVal.length);\n    if(typeVal.length > 0){\n      let lastId = typeVal[typeVal.length-1].id;\n      typeLength = ++lastId;\n    }\n    \n    let types = {\n      id: typeLength,\n      object_type:'',\n      object_title:'Title',\n      fields:[\n        {id:0,title:'Title',type:'small_text'}\n      ],\n    }\n    this.props.createTypes(types);\n\n    // Entry in type_item and type_field\n    this.props.addItems(typeLength);      \n  }\n\n  AddField(data,e){\n    e.preventDefault();\n    let fieldLength = data.fields.length;\n    let lastFieldId = data.fields[fieldLength-1].id;\n    lastFieldId = ++lastFieldId;\n\n    let types = {id:lastFieldId,title:'',type:'small_text'}\n    data.fields.push(types);\n    this.props.editTypes(data);\n  }\n\n  objectTypeEdit(e,data){\n    data.object_type = e.target.value;\n    this.props.editTypes(data);\n  }\n  objectTitleEdit(e,data){\n    data.object_title = e.target.value;\n    this.props.editTypes(data);\n  }\n  objectFieldEdit(e,data,i){\n    data.fields[i].title = e.target.value;\n    this.props.editTypes(data);\n  }\n  objectFieldTypeEdit(e,data,i){\n    if(e.target.value==\"remove_text\") {\n      //this.props.removeFields(data.id,data.fields[i].id);\n      data.fields.splice( i, 1 );\n    } else {\n      data.fields[i].type = e.target.value;\n    }\n    this.props.editTypes(data);\n  }\n  deleteTypes(e, index){\n    e.preventDefault();\n    this.props.deleteTypes(index);\n  }\n\n\n  listView(data, index){\n    return (\n        <div className=\"box-grid\" key={index}>\n          <div className=\"heading\">\n            {data.object_type}\n            <a href=\"#\" className=\"cross\" onClick={(e) => this.deleteTypes(e, data.id)}>x</a>\n          </div>\n          <div className=\"box-detail\"> \n             <label>Object Type:</label>\n             <input type=\"text\" onChange={(e) => this.objectTypeEdit(e,data)} value={data.object_type} />\n             <label>Object Title:</label>\n             <select onChange={(e) => this.objectTitleEdit(e,data)} value={data.object_title}>\n                {data.fields.map((value, i) => {\n                  return (\n                      <option key={i} value={value.title}>{value.title}</option>\n                    );\n                 })\n                }\n             </select>\n\n             <label>Fields:</label>\n             {data.fields.map((value, i) => {\n               return (\n                <div className=\"field-sec\" key={i}>\n                  <input type=\"text\" onChange={(e) => this.objectFieldEdit(e,data,i)} value={value.title}  />\n                  <select onChange={(e) => this.objectFieldTypeEdit(e,data,i)} value={value.type}>\n                    <option value=\"small_text\">Small Text</option>\n                    <option value=\"long_text\">Long Text</option>\n                    <option value=\"number_text\">Number Text</option>\n                    <option value=\"date_text\">Date</option>\n                    <option value=\"remove_text\">Remove</option>\n                  </select>\n                </div>\n                );\n              })\n             }\n            <div className=\"add_field\" onClick={(e) => this.AddField(data,e)}><button>Add Field</button></div>\n          </div>\n        </div>\n    )\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n        <Header />\n        <section className=\"body-sec\">\n          <div className=\"flex-row\">\n            \n              {this.props.types.map((type, i) => this.listView(type, i))}\n            \n            <div class=\"col-md-3\">\n              <button onClick={(e) => this.AddTypes(e,this.props.types)} className=\"add_type_btn\">Add Types</button>\n            </div>\n          </div>\n        </section>\n        </React.Fragment>\n        \n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    types: state.types\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createTypes: types => dispatch(typesAction.createTypes(types)),\n    editTypes: data => dispatch(typesAction.editTypes(data)),\n    deleteTypes: index =>dispatch(typesAction.deleteTypes(index)),\n    addItems: typesItem =>dispatch(typesAction.addItems(typesItem)),\n    \n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","import * as actionTypes from './actionTypes';\n\nexport const createTypes = (types) => {\n    return {\n      type: actionTypes.CREATE_NEW_TYPES,\n      types: types\n    }\n  };\nexport const editTypes = (data) => {\n    return {\n        type: actionTypes.EDIT_TYPES,\n        data: data\n    }\n}\nexport const deleteTypes = (id) => {\n  return {\n      type: actionTypes.DELETE_TYPES,\n      id: id\n  }\n}\nexport const addItems = (itemdata) => {\n  return {\n      type: actionTypes.ADDITEMS,\n      itemdata: itemdata\n  }\n}\nexport const addFields = (itemdata) => {\n  return {\n      type: actionTypes.ADD_FIELDS,\n      itemdata: itemdata\n  }\n}\nexport const editFields = (data) => {\n  return {\n      type: actionTypes.EDIT_FIELDS,\n      data: data\n  }\n}\nexport const removeFields = (data,filed_id) => {\n  return {\n      type: actionTypes.EDIT_FIELDS,\n      data: data,\n      filed_id:filed_id\n  }\n}","export const GET_ALL_TYPES = 'GET_ALL_TYPES';\nexport const CREATE_NEW_TYPES = 'CREATE_NEW_TYPES';\nexport const EDIT_TYPES = 'EDIT_TYPES';\nexport const DELETE_TYPES = 'DELETE_TYPES';\nexport const ADDITEMS = 'ADDITEMS';\nexport const ADD_FIELDS = 'ADD_FIELDS';\nexport const EDIT_FIELDS = 'EDIT_FIELDS';","import React, { Component } from 'react';\nimport Header from '../header';\nimport { connect } from 'react-redux';\nimport * as typesAction from '../../actions/typesAction';\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name:[],\n    }; \n    \n   \n  }\n\n  componentDidMount(){\n    \n     this.props.items.map((item, i) => {\n      let typeLength = 0;\n      let fieldLength = this.props.fields.length;\n      console.log(\"fieldLength>>\",fieldLength)\n      if(fieldLength > 0){\n        let lastId = this.props.fields[fieldLength-1].id;\n        console.log(\"lastId>>\",lastId)\n        typeLength = ++lastId;\n      }\n        const index = this.props.types.findIndex(val => val.id === item.types_id);\n        console.log(\"index\",index)\n        this.props.types[index].fields.map((value, i) => {\n          let types = {\n            id: typeLength,\n            item_id:item.id,\n            type_id:item.types_id,\n            field_id:value.id,\n            field_value:'',\n          }\n          this.props.addFields(types);\n        })\n      })\n  }\n\n  AddTypes(e,typeVal){\n    e.preventDefault();\n    let typeLength = 0;\n    console.log(typeVal.length);\n    if(typeVal.length > 0){\n      let lastId = typeVal[typeVal.length-1].id;\n      typeLength = ++lastId;\n    }\n    \n    let types = {\n      id: typeLength,\n      object_type:'',\n      object_title:'Title',\n      fields:[\n        {title:'Title',type:'small_text'}\n      ],\n    }\n    this.props.createTypes(types);\n  }\n\n  \n\n  editFields(e,index){\n    e.preventDefault();\n    //let fieldIndex = this.props.fields.findIndex(val => val.id === index);\n    console.log(\"fieldIndex>>>>>>>>\",index);\n    let data = this.props.fields;\n    data[index].field_value = e.target.value;\n    this.props.editFields(data);\n  }\n\n\n  listView(data, index){\n    let indexType = this.props.types.findIndex(val => val.id === data.types_id);\n\n    var filterField = this.props.fields.filter(n => n.item_id == data.id);\n    \n    return (\n        <div className=\"box-grid\" key={index}>\n          <div className=\"heading\">\n            \n            {this.props.types[indexType].object_type}\n            <a href=\"#\" className=\"cross\" onClick={(e) => this.deleteTypes(e, data.id)}>x</a>\n          </div>\n          <div className=\"box-detail\"> \n            {filterField.map((value, i) => {\n                return (\n                  <div key={i}>\n                    <label>{this.props.types[indexType].fields[(this.props.types[indexType].fields.findIndex(val => val.id === value.field_id))].title}</label>\n                    <input type=\"text\" onChange={(e) => this.editFields(e,i)} value={value.field_value} />\n                  </div>\n                  );\n             })\n            }\n          </div>\n        </div>\n    )\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n        <Header />\n        <section className=\"body-sec\">\n          <div className=\"flex-row\">\n          {this.props.match.params.id === 'all' ?\n            this.props.items.map((type, i) => this.listView(type, i))\n            :\n            this.props.types.forEach((type, i) => {\n              console.log(\"type.id\",type)\n              if(type.id===this.props.match.params.id) {\n                console.log(\"type.id>>>\",type)\n                //return this.listView(type, i);\n              }\n            })\n          }\n            \n            \n            <div class=\"col-md-3\">\n              {(this.props.types.length>0) ?\n              <button className=\"add_type_btn\">Add Item</button>\n              : \"\" }\n            </div>\n          </div>\n        </section>\n        </React.Fragment>\n        \n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    types: state.types,\n    items: state.items,\n    fields: state.fields\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFields: types =>dispatch(typesAction.addFields(types)),\n    editFields: data =>dispatch(typesAction.editFields(data)),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams } from \"react-router-dom\";\nimport Home from \"../../Screens/home\";\nimport ManageTypes from \"../../Screens/manageTypes\";\nimport AddTypes from \"../../Screens/AddTypes\";\n\nclass Routermain extends Component {\n    render() {\n        return (\n            \n                <Router>\n                     <Route exact path=\"/\" component={Home} />\n                     <Route exact path=\"/manageTypes\" component={ManageTypes} />  \n                     <Route exact path=\"/addType/:id\" url=\"/addType/id\" component={AddTypes} />  \n                </Router>\n                \n            \n        )\n    }\n}\nexport default Routermain; ","import { combineReducers } from 'redux';\nimport types from './typesReducer';\nimport items from './itemsReducer';\nimport fields from './typesFields';\n\nexport default combineReducers({\n    types: types,\n    items: items,\n    fields: fields\n});","import * as actionTypes from '../actions/actionTypes.js';\n\nexport default (state = [], action) => {\n    switch (action.type){\n      \n      case actionTypes.CREATE_NEW_TYPES:\n      return [\n        ...state,\n        Object.assign({}, action.types)\n      ];\n      case actionTypes.EDIT_TYPES:\n        var elementPos = state.map(function(x) {return x.id; }).indexOf(action.data.id);\n        let dupState = [...state];\n        dupState[elementPos] = action.data;\n        console.log(\"dupState\",action.data)\n        return dupState;\n      case actionTypes.DELETE_TYPES:\n        return state.filter((data, i) => data.id !== action.id);\n      default:\n            return state;\n    }\n  };","import * as actionTypes from '../actions/actionTypes.js';\n\nexport default (state = [], action) => {\n    switch (action.type){\n      case actionTypes.ADDITEMS:\n        let flag = false;\n        let dupState = [];\n        state.forEach(function(val) {\n          if (val.types_id===action.itemdata) {\n            flag = true;\n          }\n        });\n        console.log(\"flag\",flag)\n        if(flag === true) {\n          dupState = [...state];\n        } else {\n          let fieldLength = state.length;\n          let lastFieldId = 0;\n          if(fieldLength > 0) {\n            lastFieldId = state[fieldLength-1].id;\n            lastFieldId = ++lastFieldId;\n          }\n          dupState = [...state,Object.assign({},  {id: lastFieldId,types_id:action.itemdata})];\n        }\n       \n        return dupState;\n      default:\n            return state;\n    }\n  };","import * as actionTypes from '../actions/actionTypes.js';\n\nexport default (state = [], action) => {\n    switch (action.type){\n            \n      case actionTypes.ADD_FIELDS:\n        let dupState = [...state];\n        let element =  action.itemdata;\n        console.log(\"dupState.indexOf(element)\",dupState.indexOf(element));\n        //if (dupState.indexOf(element) === -1) dupState.push(element);\n        if (!dupState.find(o => o.item_id === element.item_id && o.type_id === element.type_id && o.field_id === element.field_id))\n        dupState.push(element);\n        return dupState;   \n      case actionTypes.EDIT_FIELDS:\n        var elementPos = state.map(function(x) {return x.id; }).indexOf(action.data.id);\n        let dupState2 = [...state];\n        dupState2[elementPos] = action.data;\n        return dupState2;\n      default:\n            return state;\n    }\n  };","import {createStore} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport rootReducer from '../reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer)\n  let persistor = persistStore(store)\n  return { store, persistor }\n}\n\n// export default function configureStore(initialState) {\n//   return createStore(rootReducer, initialState);\n// }","import React from 'react';\nimport Routermain from \"./routes/routermain\";\nimport { Provider } from 'react-redux';\nimport configureStore from '../store/configureStore';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { persistor, store } = configureStore()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n       <Routermain />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\n//<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n//import '../node_modules/bootstrap/dist/js/popper.min.js';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}